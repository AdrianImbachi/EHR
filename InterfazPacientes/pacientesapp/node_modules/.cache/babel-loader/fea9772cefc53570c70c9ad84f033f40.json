{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\proyectos react\\\\pacientes\\\\pacientesapp\\\\src\\\\components\\\\Validacion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeError } from \"../elementos/Formularios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport Input from \"./Input\";\nimport '../css/estilos.css';\nimport saveData from \"./SaveData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Validacion = () => {\n  _s();\n\n  const [usuario, cambiarUsuario] = useState({\n    campo: '',\n    valido: null\n  });\n  const [password, cambiarPassword] = useState({\n    campo: '',\n    valido: null\n  });\n  const [archivo, cambiarArchivo] = useState({\n    campo: '',\n    valido: null\n  });\n  const [paciente, cambiarPaciente] = useState({\n    campo: '',\n    valido: null\n  });\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,100}$/,\n    // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n    // Letras y espacios, pueden llevar acentos.\n    password: /^.{4,12}$/,\n    // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/,\n    // 7 a 14 numeros.\n    archivo: /^.{1,100}$/ // 4 a 12 digitos.\n\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (usuario.valido === 'true' && paciente.valido === 'true' && archivo.valido === 'true' && password.valido // terminos\n    ) {\n      cambiarFormularioValido(true);\n      cambiarUsuario({\n        campo: '',\n        valido: ''\n      });\n      cambiarArchivo({\n        campo: '',\n        valido: ''\n      });\n      cambiarPaciente({\n        campo: '',\n        valido: null\n      });\n      cambiarPassword({\n        campo: '',\n        valido: null\n      });\n    } else {\n      cambiarFormularioValido(false);\n    }\n\n    console.log(usuario.campo);\n    console.log(paciente.campo);\n    console.log(archivo.campo);\n    var a = {};\n    a.usuario = usuario.campo;\n    a.paciente = paciente.campo;\n    a.archivo = archivo.campo;\n    console.log(typeof a);\n    /* \r\n    let hexUsuario = text_to_hex(usuario.campo);\r\n    let hexPaciente= text_to_hex(paciente.campo);\r\n    let hexArchivo = text_to_hex(archivo.campo);\r\n    // let hexPassword = text_to_hex(password.campo);\r\n      let v = (hexUsuario+hexPaciente+hexArchivo);\r\n      let hexjson = {\"usuario\":hexUsuario,\"paciente\":hexPaciente,\"archivo\":hexArchivo};\r\n    // let hexjson = {usuario.campo,paciente.campo,archivo.campo};\r\n    let jsoncompleto = (hexjson);\r\n    // console.log(jsoncompleto); */\n\n    let publicar = {\n      \"method\": \"publish\",\n      \"params\": [\"streamehr\", \"key1\", {\n        \"json\": a\n      }],\n      \"chain_name\": \"cadena3\"\n    }; // let publicar = {\"method\":\"publish\",\"params\":[\"streamehr\",\"key1\",{\"json\":hexjson}],\"chain_name\":\"cadena3\"};\n    // let publicar = {\"method\":\"publish\",\"params\":[\"streamehr\",\"key1\",{\"json\":v}],\"chain_name\":\"cadena3\"};\n\n    publishData(publicar);\n  };\n  /* \r\n  function text_to_hex(str) {\r\n      var arr1 = [];\r\n      for ( var n = 0, l = str.length; n < l; n++) {\r\n          var hex = Number(str.charCodeAt(n)).toString(16);\r\n          arr1.push(hex);\r\n      }\r\n      return arr1.join('');\r\n  }\r\n  */\n\n\n  const publishData = data => {\n    var url = 'http://localhost:8000/api/multichain';\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).catch(error => console.error('Error:', error)).then(response => console.log('Success:', response));\n  };\n\n  function validarExt() {\n    var archivoInput = document.getElementById('cargarArchivoPortable');\n    var archivoRuta = archivoInput.value;\n    var extPermitidas = /(.html)$/i;\n\n    if (!extPermitidas.exec(archivoRuta)) {\n      console.log(\"seleccione archivo html\");\n      archivoInput.value = '';\n      return false;\n    } else {\n      if (archivoInput.files && archivoInput.files[0]) {\n        var visor = new FileReader();\n\n        visor.onload = function (e) {\n          document.getElementById('visorArchivo').innerHTML = '<iframe width=\"600\" height=\"800\"  src=\"' + e.target.result + '\"/>';\n        };\n\n        visor.readAsDataURL(archivoInput.files[0]);\n      }\n    }\n  }\n\n  const verDatos = () => {\n    // Patient\n    let name = localStorage.getItem(\"name\");\n    let document = localStorage.getItem(\"document\");\n    let gender = localStorage.getItem(\"gender\");\n    let birthDate = localStorage.getItem(\"birthDate\");\n    let age = localStorage.getItem(\"age\");\n    let email = localStorage.getItem(\"email\");\n    let phone = localStorage.getItem(\"phone\");\n    let address = localStorage.getItem(\"address\"); // Condition\n\n    let titlec = localStorage.getItem(\"titlec\");\n    let code = localStorage.getItem(\"code\");\n    let clinicalStatus = localStorage.getItem(\"clinicalStatus\");\n    let VerificationStatus = localStorage.getItem(\"VerificationStatus\"); // Categoria\n\n    let category = localStorage.getItem(\"category\");\n    let reason = localStorage.getItem(\"reason\");\n    let status = localStorage.getItem(\"status\");\n    let period = localStorage.getItem(\"period\");\n    /* \r\n    let medical = localStorage.getItem(\"medical\");\r\n    console.log(medical); */\n    // Patient\n\n    let person = {\n      name,\n      document,\n      gender,\n      birthDate,\n      age,\n      email,\n      phone,\n      address\n    };\n    console.log(person);\n    let condition = {\n      titlec,\n      code,\n      clinicalStatus,\n      VerificationStatus\n    };\n    console.log(condition);\n    let categ = {\n      category,\n      reason,\n      status,\n      period\n    };\n    console.log(\"categoria\", categ);\n    saveData(person);\n  };\n\n  function ingresar() {\n    validarExt();\n    verDatos();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Formulario, {\n      className: \"backformulario\",\n      action: \"\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        estado: usuario,\n        cambiarEstado: cambiarUsuario,\n        tipo: \"text\",\n        label: \"Usuario\",\n        value: usuario,\n        placeholder: \"jose123\",\n        name: \"usuario\",\n        leyendaError: \"El usuario tiene que ser de 4 a 16 digitos y solo puede contener n\\xFAmeros, letra y gui\\xF3n bajo. \",\n        expresionRegular: expresiones.usuario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: paciente,\n        cambiarEstado: cambiarPaciente,\n        tipo: \"text\",\n        label: \"Id Paciente\",\n        placeholder: \"123jdj4\",\n        name: \"paciente\",\n        leyendaError: \"El id del paciente solo debe contener letras y numeros. \",\n        expresionRegular: expresiones.usuario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: archivo,\n        cambiarEstado: cambiarArchivo,\n        accept: \".html\",\n        tipo: \"file\",\n        label: \"Cargar Archivo Portable\",\n        placeholder: \"\",\n        name: \"cargarArchivoPortable\",\n        leyendaError: \"Solo se permite archivos con extension .html \",\n        expresionRegular: expresiones.archivo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        estado: password,\n        cambiarEstado: cambiarPassword,\n        tipo: \"password\",\n        label: \"Token\",\n        placeholder: \"****\",\n        name: \"contrase\\xF1a\",\n        leyendaError: \"La clave tiene que se de 4 a 12 digitos. \",\n        expresionRegular: expresiones.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), formularioValido === false && /*#__PURE__*/_jsxDEV(MensajeError, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faExclamationTriangle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Error: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), \" Por favor rellene el formulario correctamente.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(ContenedorBotonCentrado, {\n        children: [/*#__PURE__*/_jsxDEV(Boton, {\n          type: \"submit\",\n          children: \"Ver HC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), formularioValido === true && ingresar()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divHC\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Historia Cl\\xEDnica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewerIframe\",\n      id: \"visorArchivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Validacion, \"BhbbKECE2yKYQoMnRPFcdun9tlQ=\");\n\n_c = Validacion;\nexport default Validacion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validacion\");","map":{"version":3,"names":["React","useState","Formulario","ContenedorBotonCentrado","Boton","MensajeError","FontAwesomeIcon","faExclamationTriangle","Input","saveData","Validacion","usuario","cambiarUsuario","campo","valido","password","cambiarPassword","archivo","cambiarArchivo","paciente","cambiarPaciente","formularioValido","cambiarFormularioValido","expresiones","nombre","correo","telefono","onSubmit","e","preventDefault","console","log","a","publicar","publishData","data","url","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","response","validarExt","archivoInput","document","getElementById","archivoRuta","value","extPermitidas","exec","files","visor","FileReader","onload","innerHTML","target","result","readAsDataURL","verDatos","name","localStorage","getItem","gender","birthDate","age","email","phone","address","titlec","code","clinicalStatus","VerificationStatus","category","reason","status","period","person","condition","categ","ingresar"],"sources":["C:/Users/ASUS/Documents/proyectos react/pacientes/pacientesapp/src/components/Validacion.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { Formulario, ContenedorBotonCentrado, Boton, MensajeError} from \"../elementos/Formularios\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport Input from \"./Input\";\r\nimport '../css/estilos.css';\r\nimport saveData from \"./SaveData\";\r\n\r\nconst Validacion = () => {\r\n    const [usuario, cambiarUsuario] = useState({campo: '', valido: null});\r\n    const [password, cambiarPassword]= useState({campo: '', valido: null});\r\n    const [archivo, cambiarArchivo]= useState({campo: '', valido: null});\r\n    const [paciente, cambiarPaciente]= useState({campo: '', valido: null});\r\n    const [formularioValido, cambiarFormularioValido] = useState(null);\r\n\r\n    const expresiones = {\r\n        usuario: /^[a-zA-Z0-9_-]{4,100}$/, // Letras, numeros, guion y guion_bajo\r\n        nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\r\n        password: /^.{4,12}$/, // 4 a 12 digitos.\r\n        correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\r\n        telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\r\n        archivo: /^.{1,100}$/, // 4 a 12 digitos.\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            usuario.valido === 'true' &&\r\n            paciente.valido === 'true' &&\r\n            archivo.valido === 'true' &&\r\n            password.valido\r\n            // terminos\r\n        ){\r\n            cambiarFormularioValido(true);\r\n\t\t\tcambiarUsuario({campo: '', valido: ''});\r\n\t\t\tcambiarArchivo({campo: '', valido: ''});\r\n\t\t\tcambiarPaciente({campo: '', valido: null});\r\n\t\t\tcambiarPassword({campo: '', valido: null});\r\n        }else{\r\n            cambiarFormularioValido(false);\r\n        }\r\n        console.log(usuario.campo);\r\n        console.log(paciente.campo);\r\n        console.log(archivo.campo);\r\n\r\n        var a = {};\r\n        a.usuario = usuario.campo;\r\n        a.paciente = paciente.campo;\r\n        a.archivo = archivo.campo;\r\n        console.log(typeof(a));\r\n\r\n        /* \r\n        let hexUsuario = text_to_hex(usuario.campo);\r\n        let hexPaciente= text_to_hex(paciente.campo);\r\n        let hexArchivo = text_to_hex(archivo.campo);\r\n        // let hexPassword = text_to_hex(password.campo);\r\n\r\n        let v = (hexUsuario+hexPaciente+hexArchivo);\r\n\r\n        let hexjson = {\"usuario\":hexUsuario,\"paciente\":hexPaciente,\"archivo\":hexArchivo};\r\n        // let hexjson = {usuario.campo,paciente.campo,archivo.campo};\r\n        let jsoncompleto = (hexjson);\r\n        // console.log(jsoncompleto); */\r\n        let publicar = {\"method\":\"publish\",\"params\":[\"streamehr\",\"key1\",{\"json\":a}],\"chain_name\":\"cadena3\"};\r\n        // let publicar = {\"method\":\"publish\",\"params\":[\"streamehr\",\"key1\",{\"json\":hexjson}],\"chain_name\":\"cadena3\"};\r\n        // let publicar = {\"method\":\"publish\",\"params\":[\"streamehr\",\"key1\",{\"json\":v}],\"chain_name\":\"cadena3\"};\r\n        publishData(publicar);\r\n    }\r\n    /* \r\n    function text_to_hex(str) {\r\n        var arr1 = [];\r\n        for ( var n = 0, l = str.length; n < l; n++) {\r\n            var hex = Number(str.charCodeAt(n)).toString(16);\r\n            arr1.push(hex);\r\n        }\r\n        return arr1.join('');\r\n    }\r\n */\r\n    const publishData = (data) => {\r\n        var url = 'http://localhost:8000/api/multichain';\r\n\r\n        fetch(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers:{ 'Content-Type': 'application/json'}\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => console.log('Success:', response));\r\n    }\r\n\r\n    function validarExt() {\r\n        var archivoInput = document.getElementById('cargarArchivoPortable');\r\n        var archivoRuta = archivoInput.value;\r\n        var extPermitidas = /(.html)$/i;\r\n\r\n        if(!extPermitidas.exec(archivoRuta)){\r\n            console.log(\"seleccione archivo html\");\r\n            archivoInput.value='';\r\n            return false;\r\n        }\r\n        else {\r\n            if(archivoInput.files && archivoInput.files[0]){\r\n                var visor = new FileReader();\r\n                visor.onload = function(e) {\r\n                    document.getElementById('visorArchivo').innerHTML =\r\n                    '<iframe width=\"600\" height=\"800\"  src=\"'+e.target.result+'\"/>'\r\n                };\r\n                visor.readAsDataURL(archivoInput.files[0]);\r\n            }\r\n        }\r\n    }\r\n    const verDatos = () => {\r\n        // Patient\r\n        let name = localStorage.getItem(\"name\");\r\n        let document = localStorage.getItem(\"document\");\r\n        let gender = localStorage.getItem(\"gender\");\r\n        let birthDate = localStorage.getItem(\"birthDate\");\r\n        let age = localStorage.getItem(\"age\");\r\n        let email = localStorage.getItem(\"email\");\r\n        let phone = localStorage.getItem(\"phone\");\r\n        let address = localStorage.getItem(\"address\");\r\n    \r\n        // Condition\r\n        let titlec = localStorage.getItem(\"titlec\");\r\n        let code = localStorage.getItem(\"code\");\r\n        let clinicalStatus = localStorage.getItem(\"clinicalStatus\");\r\n        let VerificationStatus = localStorage.getItem(\"VerificationStatus\");\r\n    \r\n        // Categoria\r\n        let category = localStorage.getItem(\"category\");\r\n        let reason = localStorage.getItem(\"reason\");\r\n        let status = localStorage.getItem(\"status\");\r\n        let period = localStorage.getItem(\"period\");\r\n\r\n        /* \r\n        let medical = localStorage.getItem(\"medical\");\r\n        console.log(medical); */\r\n\r\n        // Patient\r\n        let person = { name, document, gender, birthDate, age, email, phone, address };\r\n        console.log(person);\r\n    \r\n        let condition = {titlec, code, clinicalStatus, VerificationStatus}\r\n        console.log(condition)\r\n\r\n        let categ = {category,reason,status,period}\r\n        console.log(\"categoria\",categ);\r\n\r\n        saveData(person);\r\n\r\n    }\r\n\r\n    function ingresar()  {\r\n        validarExt();\r\n        verDatos();\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            <Formulario className=\"backformulario\" action=\"\" onSubmit={onSubmit}>\r\n                <Input\r\n                    estado={usuario}\r\n                    cambiarEstado={cambiarUsuario}\r\n                    tipo=\"text\"\r\n                    label=\"Usuario\"\r\n                    value={usuario}\r\n                    placeholder=\"jose123\"\r\n                    name=\"usuario\"\r\n                    leyendaError=\"El usuario tiene que ser de 4 a 16 digitos y solo puede contener números, letra y guión bajo. \"\r\n                    expresionRegular={expresiones.usuario}\r\n                />\r\n                <Input\r\n                    estado={paciente}\r\n                    cambiarEstado={cambiarPaciente}\r\n                    tipo=\"text\"\r\n                    label=\"Id Paciente\"\r\n                    placeholder=\"123jdj4\"\r\n                    name=\"paciente\"\r\n                    leyendaError=\"El id del paciente solo debe contener letras y numeros. \"\r\n                    expresionRegular={expresiones.usuario}\r\n                />\r\n                <Input\r\n                    estado={archivo}\r\n                    cambiarEstado={cambiarArchivo}\r\n                    accept=\".html\"\r\n                    tipo=\"file\"\r\n                    label=\"Cargar Archivo Portable\"\r\n                    placeholder=\"\"\r\n                    name=\"cargarArchivoPortable\"\r\n                    leyendaError=\"Solo se permite archivos con extension .html \"\r\n                    expresionRegular={expresiones.archivo}\r\n                />\r\n                <Input\r\n                    estado={password}\r\n                    cambiarEstado={cambiarPassword}\r\n                    tipo=\"password\"\r\n                    label=\"Token\"\r\n                    placeholder=\"****\"\r\n                    name=\"contraseña\"\r\n                    leyendaError=\"La clave tiene que se de 4 a 12 digitos. \"\r\n                    expresionRegular={expresiones.password}\r\n                />\r\n\r\n                {formularioValido === false && <MensajeError>\r\n                    <p>\r\n                        <FontAwesomeIcon icon={faExclamationTriangle}/>\r\n                        <b>Error: </b> Por favor rellene el formulario correctamente.\r\n                    </p>\r\n                </MensajeError>}\r\n                <ContenedorBotonCentrado>\r\n                    <Boton type=\"submit\">Ver HC </Boton>\r\n                    {formularioValido === true && ingresar()}\r\n                    {/* {formularioValido === true && <MensajeExito>El formulario se envió exitosamente</MensajeExito>} */}\r\n                </ContenedorBotonCentrado>\r\n            </Formulario>\r\n\r\n            {/* visor histioria clínica */}\r\n            <div className=\"divHC\">\r\n                <h1> Historia Clínica</h1>\r\n            </div>\r\n            <div className=\"viewerIframe\" id=\"visorArchivo\"></div>\r\n        </main>\r\n    );\r\n\r\n}\r\n\r\nexport default Validacion;"],"mappings":"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"},"metadata":{},"sourceType":"module"}